def mergeSort(arr): 
    if len(arr) > 1: 
        mid = len(arr)//2 
        left = arr[:mid] 
        right = arr[mid:] 
        t1 = threading.Thread(target=mergeSort, args=(left,))
        t2 = threading.Thread(target=mergeSort, args=(right,))
        t1.start()
        t2.start()
        t1.join()
        t2.join()
  
        currIndexLeft = 0
        currIndexRight = 0
        currIndexTemp = 0
        
        while currIndexLeft < len(left) and currIndexRight < len(right): 
            if left[currIndexLeft] < right[currIndexRight]: 
                arr[currIndexTemp] = left[currIndexLeft] 
                currIndexLeft+=1
            elif right[currIndexRight] < left[currIndexLeft]: 
                arr[currIndexTemp] = right[currIndexRight] 
                currIndexRight+=1
            currIndexTemp += 1
          
        if currIndexLeft < len(left):
            for i in range(currIndexLeft, len(left)):
                arr[currIndexTemp] = left[i]
                currIndexTemp += 1
                
        if currIndexRight < len(right):
            for i in range(currIndexRight, len(right)):
                arr[currIndexTemp] = right[i]
                currIndexTemp += 1